/*
* SPDX-FileCopyrightText: Copyright 2020 - 2021 | CSI Piemonte
* SPDX-License-Identifier: EUPL-1.2
*/
/**
 * Moti
 * API per il backend della suite di Moti.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ApiError } from '../model/apiError';
import { Intervento } from '../model/intervento';
import { PagedResponseIntervento } from '../model/pagedResponseIntervento';
import { RicercaIntervento } from '../model/ricercaIntervento';


import { Configuration }                                     from '../configuration';


export interface InterventoServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * 
    * Cancella l&#39;intervento per id.
    * @param X_HTTP_Method_Override 
    * @param id L&#39;id dell&#39;intervento.
    * @param intervento 
    */
    deleteIntervento(X_HTTP_Method_Override: string, id: number, intervento: Intervento, extraHttpRequestParams?: any): Observable<string>;

    /**
    * 
    * Restituisce l&#39;allegato dell&#39;intervento selezionato.
    * @param id intervento
    */
    getEsportaIntervento(id: number, extraHttpRequestParams?: any): Observable<Blob>;

    /**
    * 
    * Restituisce dati registrati su sistema.
    * @param id id
    */
    getIntervento(id: number, extraHttpRequestParams?: any): Observable<Intervento>;

    /**
    * 
    * Restituisce dati registrati su sistema.
    * @param codIntervento codice
    */
    getInterventoByCodIntervento(codIntervento: string, extraHttpRequestParams?: any): Observable<Intervento>;

    /**
    * 
    * Restituisce dati registrati su sistema.
    * @param ricercaIntervento 
    * @param offset Il numero di record da ignorare prima di iniziare a raccogliere i risultati.
    * @param limit Il numero di record da restituire.
    * @param sort Il campo di sort.
    * @param direction La direzione di sort.
    */
    getRicercaInterventi(ricercaIntervento: RicercaIntervento, offset?: number, limit?: number, sort?: string, direction?: 'asc' | 'desc' | '', extraHttpRequestParams?: any): Observable<PagedResponseIntervento>;

    /**
    * 
    * Restituisce l&#39;allegato degli interventi selezionati.
    * @param pagedResponseIntervento 
    */
    postEsportaListaInterventi(pagedResponseIntervento: PagedResponseIntervento, extraHttpRequestParams?: any): Observable<Blob>;

    /**
    * 
    * Restituisce l&#39;allegato degli interventi ricercati.
    * @param ricercaIntervento 
    */
    postEsportaRicercaIntervento(ricercaIntervento: RicercaIntervento, extraHttpRequestParams?: any): Observable<Blob>;

    /**
    * 
    * Restituisce dati registrati su sistema.
    * @param intervento 
    */
    postIntervento(intervento: Intervento, extraHttpRequestParams?: any): Observable<Intervento>;

    /**
    * 
    * Restituisce dati registrati su sistema.
    * @param id intervento
    * @param intervento 
    */
    putInterventoById(id: number, intervento: Intervento, extraHttpRequestParams?: any): Observable<Intervento>;

}
